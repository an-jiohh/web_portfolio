#!/usr/bin/env node
"use strict";

//모듈
const app = require("../app");
const debug = require("debug")("app:server");

/**
 * Get port from environment and store in Express.
 */

const port = process.env.PORT;
app.set("port", port);

/**
 * Listen on provided port, on all network interfaces.
 */

app.listen(port);
app.on("error", onError);
app.on("listening", onListening);

//

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

//

function onListening() {
  const addr = server.address();
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
  console.log("서버시작");
}
